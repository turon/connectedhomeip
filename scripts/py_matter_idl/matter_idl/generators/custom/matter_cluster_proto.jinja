
/**
 * This defines the UDDM Matter trait per http://go/matter-uddm-traits for the
 * functionality specified by the Matter {{cluster.name}} Cluster
 * on a device.
 *
 * Related existing traits in nest services:
 *   - WDL Traits:           http://cs/google3/nest/schema/v1/weave/trait
 *   - Smarthome Traits:     http://go/smarthome-traits
 *   - Matter {{cluster.name}}Cluster:
 *                           http://go/matter-clusters#{{cluster.name}}Cluster
 */

syntax = "proto3";

package home.uddm.matter.traits;

import "home/homeservicelayer/uddm/core/uddm_annotations.proto";

option java_multiple_files = true;

message {{cluster.name}}Trait {
  option (message_type) = UDDM_TRAIT;

  enum ClusterId {
    CLUSTER_ID_ZERO = 0;
    CLUSTER_ID = {{cluster.code}};
  }

  // Enums
{%-   for entry in cluster.enums %}
  enum {{entry.name}} {
      {% if (entry.entries[0].code != 0) %}{{"zero" | toEnumConstant(entry.name)}} = 0;{% endif %}
      {%-  for field in entry.entries %}
      {{field.name | toEnumConstant(entry.name)}} = {{field.code}};{%   endfor %}
  }
{%   endfor %}

  // Bitmaps
{%-   for entry in cluster.bitmaps %}
  enum {{entry.name}} {
      {{"zero" | toEnumConstant(entry.name)}} = 0;
      {%-  for field in entry.entries %}
      {{field.name | toEnumConstant(entry.name)}} = {{field.code}};{%   endfor %}
  }
{%   endfor %}

  // Structs
{%-   for entry in cluster.structs %}{% if not entry.tag %}
  message {{entry.name}} {
      {%-  for field in entry.fields %}
      {{field | toFieldComment}}
      {{field | toFieldType}} {{field.name | toLowerSnakeCase}} = {{field | toFieldTag}};{%   endfor %}
  }
{% endif %}{%   endfor %}

  // Attributes
{%-   for attr in cluster.attributes %}
  {{attr.definition.data_type.name | toProtobufType}} {{attr.definition.name | toLowerSnakeCase}} = {{attr.definition | toFieldTag()}}
      [(attribute) = {
           /* default_value: 0, */
       }];

{%   endfor %}

  // Commands
{%-   for cmd in cluster.commands %}
  message {{cmd.name}}Command {
    option (message_type) = UDDM_COMMAND;
    {% if cmd.input_param %}{%-  for field in cmd | commandArgs(cluster) %}
      {{field | toFieldComment}}
      {{field | toFieldType}} {{field.name | toLowerSnakeCase}} = {{field | toFieldTag}};{%   endfor %}{% endif %}
}{% if cmd.output_param != "DefaultSuccess" %}
  
  message {{cmd.name}}CommandResponse {
    option (message_type) = UDDM_COMMAND_RESPONSE;
    {% if cmd.output_param %}{%-  for field in cmd | commandResponseArgs(cluster) %}
      {{field | toFieldComment}}
      {{field | toFieldType}} {{field.name | toLowerSnakeCase}} = {{field | toFieldTag}};{%   endfor %}{% endif %}
  }{% endif %}
{%   endfor %}

  // Events
{%-   for entry in cluster.events %}
  message {{entry.name | toEventName}} {
    option (message_type) = UDDM_EVENT;
    {%  for field in entry.fields %}
    {{field | toFieldType}} {{field.name | toLowerSnakeCase}} = {{field | toFieldTag}};{%   endfor %}
  }

{%   endfor %}
}
